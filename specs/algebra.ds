// This is a nonsense spec just used for testing guarded statements.

Algebra:
    state ints : Bag<Int>

    op add(i : Int)
        assume not(i in ints);
        ints.add(i)

    op remove(i : Int)
        ints.remove(i)

    op add2x(i : Int)
        assume not((i + i) in ints);
        ints.add(i + i)

    //op add2xUnique(i : Int)
    //    if not ((i + i) in ints):
    //        ints.add(i + i)

    op add2xUnique2(i : Int)
        if not (i in ints):
            ints.add(i + i)
        else:
            ints.add(i + i + i)

    op addNeg(i : Int)
        assume not((0-i) in ints);
        ints.add(0 - i)

    //op addNeg2(i : Int)
    //    ints.add(-i)

    query contains(i : Int)
        i in ints

    query size()
        len ints
